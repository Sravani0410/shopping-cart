---
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { Links } from "@/types/Links";

const { id } = Astro.params;

const req = await fetch(`${Astro.url.origin}/api/getLink.json?${id}`);
if (!req.ok) {
  throw new Error("Failed to fetch link data");
}
const { data }: { data: Links[] } = await req.json();
// console.log("data111======>", data);
const editedData = data.find((item) => item._id === id);
if (!editedData) {
  throw new Error(`Link with id ${id} not found`);
}
// console.log("data111======>", editedData);
// editedData.description = editedData.description.replace(/(?:\r\n|\r|\n)/g, '\n');
---
<BaseLayout>
  <div class="w-full max-w-sm p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700 items-center">
    <form id="add-form" class="space-y-6">
      <div>
        <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
        <input required type="text" name="name" id="name" value={editedData.name} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"/>
      </div>
      <div>
        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Description</label>
        <textarea required name="description" maxlength="160" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
          {editedData.description.replace(/(?:\r\n|\r|\n)/g, '\n')}
        </textarea>
      </div>
      <!-- <div>
        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="user_avatar">Upload file</label>
        <input class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400" aria-describedby="user_avatar_help" id="user_avatar" type="file">
      </div> -->
      <div>
        <label for="rating" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Price</label>
        <input required type="number" name="price" id="price" value={editedData.price}   class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"/>
      </div>
      <button class="text-white bg-blue-500 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
        Update Product
      </button>
    </form>
  </div>
</BaseLayout>

<script define:vars={{id}}>
  document.addEventListener('DOMContentLoaded', () => {
    const addForm = document.querySelector("#add-form");
    addForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(addForm);
      const values = Object.fromEntries(formData);
      console.log("values", values, JSON.stringify(values));
      try {
        const res = await fetch(`https://shopping-cart-backend-three.vercel.app/api/products/${id}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(values),
        });
        console.log("res", res);
        if (!res.ok) {
          throw new Error(`HTTP error! status: ${res.status}`);
        }
        const responseJson = await res.json();
        console.log("responseJson", responseJson);
        window.location.href = "/";
      } catch (err) {
        console.error(err);
      }
    });
  });
</script>

