---
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { Links } from "@/types/Links";
import { metaData } from "../data/siteData";
const { id } = Astro.params;

const fetchLinks = async () => {
  try {
    const res = await fetch(
      "https://shopping-cart-backend-three.vercel.app/api/products"
    );

    if (!res.ok) {
      throw new Error("Error fetching links");
    }

    const data = await res.json();
    return data;
  } catch (err) {
    console.error("Error fetching links:", err);
    return []; 
  }
};

const data = await fetchLinks();
---
<BaseLayout >
  <div class="flex h-screen">
    <div class="w-50%">
      {data && (
        <div class="md:col-span-1 md:flex md:flex-col md:overflow-auto items-center justify-center">
          <ul class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-8 overflow-auto flex-grow">
            {data.map((link: Links) => (
              <li class="group bg-white p-2 rounded-lg shadow border border-gray-200 dark:bg-gray-800 dark:border-gray-700 mx-auto">
                <h3 class="mt-4 text-sm text-gray-700">Product :{link.name}</h3>
                {link.image && (
                  <img
                    src={link.image}
                    alt={link.name}
                    class="w-20 h-20 rounded"
                  />
                )}
                {/* <img src={dummyimage}/> */}
                <p>Description: {link.description}</p>
                <p>Price: {link.price}</p>
                <div class="flex justify-between items-center py-2">
                  <a class="focus:outline-none text-white bg-green-500 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800" href={`/edit/${link._id}`}>Edit</a>
                  <button type="submit" class="focus:outline-none text-white bg-red-500 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text:sm px-5 py-2.5 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900" id={`delete-${link._id}`}>Delete</button>
                </div>
                {/* <a class="focus:outline-none text-white bg-blue-500 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" href={`/cart/${link._id}`}>Add To Cart</a> */}
                <button 
                    class="focus:outline-none text-white bg-blue-500 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                    onclick={`(async () => {
                      try {
                        const res = await fetch('/api/cartLink.json', {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ productId: '${link._id}', quantity: 1 }),
                        });

                        if (res.ok) {
                          window.location.href = '/cart/' + '${link._id}';
                        } else {
                          throw new Error('Failed to add item to cart');
                        }
                      } catch (err) {
                        console.error(err);
                      }
                    })();`}
                  >
                    Add To Cart
                  </button>
              </li>
            ))}
          </ul>
        </div>
      )}    
    </div>
    <!-- <div class="w-40%">
      <aside id="default-sidebar" class="fixed top-20 right-0 z-40 w-60 h-screen transition-transform -translate-x-full sm:translate-x-0" aria-label="Sidebar">
        <div class="h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800">
          <h1>your cart is empty</h1>
        </div>
      </aside>
    </div> -->
    
  </div>
</BaseLayout>
<script define:vars={{
  id,
}}>
  const deleteBtns = document.querySelectorAll("[id^=delete-]");
  deleteBtns.forEach((btn) => {
    btn.addEventListener("click", async (e) => {
      e.preventDefault();
      const id = btn.id.split("-")[1];
      try {
        const res = await fetch(`/api/${id}.json`, {
          method: "DELETE"
        });
        if (res.ok) {
          window.location.href = "/";
        } else {
          throw new Error("Failed to delete the product");
        }
      } catch (err) {
        console.log(err);
      }
    });
  });

  
</script>

