---
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { Links } from "@/types/Links";
import React from 'react';

import ButtonHTMLAttributes  from 'react';

const { id } = Astro.params;
let data: Links[] = [];
try {
  const req = await fetch(`https://shopping-cart-backend-three.vercel.app/api/cart`);
  if (!req.ok) {
    throw new Error(`Failed to fetch cart link data. Status: ${req.status}`);
  }
  const resData = await req.json();
  data = resData.items || [];
} catch (error) {
  console.error(`Failed to fetch cart link data: ${error}`);
  throw new Error(`Failed to fetch cart link data. Status: ${error}`);
}
---

<BaseLayout>
  {data?.length > 0 ? (
    <div class="relative overflow-x-auto">
      <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400">
          <tr>
            <th scope="col" class="px-6 py-3 rounded-s-lg">
              Product name
            </th>
            <th scope="col" class="px-6 py-3">
              Qty
            </th>
            <th scope="col" class="px-6 py-3">
              Description
            </th>
            <th scope="col" class="px-6 py-3 rounded-e-lg">
              Price
            </th>
            <th scope="col" class="px-6 py-3 rounded-e-lg">
              Delete
            </th>
          </tr>
        </thead>
        <tbody>
          {data.map((link: Links) => (
            <tr class="bg-white dark:bg-gray-800">
              <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                {link.name}
              </th>
              <td class="px-6 py-4">
                {link.quantity}
              </td>
              <td class="px-6 py-4">
                {link.description}
              </td>
              <td class="px-6 py-4">
                {link.price}
              </td>
              <td class="px-6 py-4">
                <button>Remove</button>
                {/* <button onclick={(e: React.MouseEvent<HTMLButtonElement>) => removeFromCart(link.id)}>Remove</button> */}
              </td>
            </tr>
          ))}
        </tbody>
        <tfoot>
          <tr class="font-semibold text-gray-900 dark:text-white">
            <th scope="row" class="px-6 py-3 text-base">Total</th>
            <td class="px-6 py-6">{data.reduce((acc:any, curr:any) => acc + curr.quantity, 0)}</td>
            <td class="px-6 py-6">{data.reduce((acc:any, curr:any) => acc + (curr.price * curr.quantity), 0).toFixed(2)}</td>
          </tr>
        </tfoot>
      </table>
    </div>
  ) : (
    <p>No data found</p>
  )}
</BaseLayout> 

<script>
//    async function removeFromCart(productId: string) {
//   try {
//     const res = await fetch(`https://shopping-cart-backend-three.vercel.app/api/cart/${productId}`, {
//       method: "DELETE",
//     });
//     if (!res.ok) {
//       throw new Error(`Failed to remove product from cart. Status: ${res.status}`);
//     }
//     // Refresh the cart data after removing the product
//     const newData = data.filter((item: Links) => item.id !== productId);
//     setData(newData);
//   } catch (error) {
//     console.error(`Failed to remove product from cart: ${error}`);
//   }
// };

</script>
